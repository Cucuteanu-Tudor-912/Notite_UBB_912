     1                                  ;APELURI DE FUNCTII SISTEM
     2                                  
     3                                  ;Se dau doua numere naturale a si b (a, b: word, definite in segmentul de date). Sa se calculeze a/b si sa se afiseze catul si restul impartirii ;in urmatorul format: "Cat = <cat>, rest = <rest>"
     4                                  ;Exemplu: pentru a=23 si b=10 se va afisa: "Cat = 2, rest = 3"
     5                                  
     6                                  ;Valorile vor fi afisate in format decimal (baza 10) cu semn.
     7                                  
     8                                  bits 32 ;asamblare si compilare pentru arhitectura de 32 biti
     9                                  
    10                                  global  start 
    11                                  
    12                                  ; declararea functiilor externe folosite de program
    13                                  extern exit, printf         ; adaugam printf ca functie externa            
    14                                  import exit msvcrt.dll    
    15                                  import printf msvcrt.dll    ; indicam asamblorului ca functia printf se gaseste in libraria msvcrt.dll
    16                                  
    17                                  extern  exit 
    18                                  import  exit msvcrt.dll
    19                                  segment  data use32 class=data
    20 00000000 1700                    	a dw 23
    21 00000002 0A00                        b dw 10
    22 00000004 436174203D2025642C-         cat_message db "Cat = %d, ", 0   ; %d va fi inlocuit cu catul celor doua numere (AX)
    22 0000000D 2000               
    23 0000000F 52657374203D202564-         rest_message db "Rest = %d", 0   ; %d va fi inlocuit cu restul celor doua numere (DX)
    23 00000018 00                 
    24                                     
    25                                  segment  code use32 class=code ; segmentul de cod
    26                                      start:
    27                                          
    28                                          ; se pune 0 in fiecare registru
    29 00000000 B800000000                      mov eax, 0
    30 00000005 BB00000000                      mov ebx, 0
    31 0000000A B900000000                      mov ecx, 0
    32 0000000F BA00000000                      mov edx, 0
    33                                          
    34 00000014 66A1[00000000]                  mov ax, [a] ; AX = 23
    35 0000001A 6699                            cwd
    36                                          ;mov bx, [b] ; BX = 10
    37                                          
    38                                          ; se face impartirea
    39 0000001C 66F73D[02000000]                idiv word[b]     ; AX = 2 (in AX este catul impartirii)
    40                                                      ; DX = 3 (in DX este restul impartirii)
    41                                          
    42 00000023 6689C3                          mov bx, ax
    43                                          ;mov eax, 0
    44                                          
    45 00000026 6689D0                          mov ax, dx
    46 00000029 98                              cwde
    47 0000002A 89C2                            mov edx, eax
    48 0000002C 52                              push edx    ; se pune EDX pe stiva, deoarece dupa apelul functiei, EDX se modifica
    49                                          
    50                                          ; se va apela printf(cat_message, EAX) => se va afisa: "Cat = 2, "
    51                                          ; se pun parametrii pe stiva de la dreapta la stanga
    52                                          
    53 0000002D 6689D8                          mov ax, bx
    54 00000030 98                              cwde
    55 00000031 50                              push dword eax         ; catul
    56 00000032 68[04000000]                    push dword cat_message ; adresa string-ului
    57                                          
    58 00000037 FF15[00000000]                  call [printf]          ; apelul functiei
    59 0000003D 83C408                          add esp, 4 * 2         ; eliberam parametrii de pe stiva; 4 = dimensiunea unui dword; 2 = nr de parametri
    60                                          
    61                                          ; se va apela printf(rest_message, EDX) => se va afisa: "Rest = 3"
    62                                          ; se pun parametri pe stiva de la dreapta la stanga
    63                                          
    64 00000040 5A                              pop edx
    65                                          
    66 00000041 52                              push dword edx          ; restul
    67 00000042 68[0F000000]                    push dword rest_message ; adresa string-ului
    68                                          
    69 00000047 FF15[00000000]                  call [printf]          ; apelul functiei
    70 0000004D 83C408                          add esp, 4 * 2         ; eliberam parametrii de pe stiva; 4 = dimensiunea unui dword; 2 = nr de parametri
    71                                      
    72 00000050 6A00                        push dword 0      ; punem pe stiva parametrul pentru exit
    73 00000052 FF15[00000000]              call [exit]       ; apelam exit pentru a incheia programul
