     1                                  bits 32 ; asamblare și compilare pentru arhitectura de 32 biți
     2                                  ; definim punctul de intrare in programul principal
     3                                  global start
     4                                  
     5                                  ; declaram functiile externe necesare programului nostru
     6                                  extern exit ; indicam asamblorului ca exit exista, chiar daca nu o vom defini 
     7                                  import exit msvcrt.dll ; exit este o functie care incheie procesul, este definita in msvcrt.dll
     8                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
     9                                          
    10                                  segment  data use32 class=data ; segmentul de date in care se vor defini variabilele 
    11                                  
    12                                  ; segmentul de cod
    13                                  segment  code use32 class=code ; 
    14                                  
    15                                  ; Efectuați calculele și analizați rezultatele: 10/4
    16                                  start: 
    17 00000000 66B80A00                MOV AX, 10
    18 00000004 66BA0000                MOV DX, 0
    19 00000008 66BB0400                mov BX,4
    20 0000000C 66F7F3                  DIV BX
    21 0000000F 6A00                    push dword 0 ;se pune pe stiva codul de retur al functiei exit
    22 00000011 FF15[00000000]          call [exit] ;apelul functiei sistem exit pentru terminarea executiei programului
